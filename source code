import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_squared_error, r2_score
# Load the dataset
# Example dataset format expected: ['PM2.5', 'TEMP', 'HUMIDITY', 'WIND_SPEED', 'NO2', 'SO2', 'CO']
df = pd.read_csv('air_quality_data.csv')
# Display basic info
print(df.head())
# Drop rows with missing values
df.dropna(inplace=True)
# Define features and target
X = df.drop('PM2.5', axis=1)
y = df['PM2.5']
# Split dataset
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
# Train model
model = RandomForestRegressor(n_estimators=100, random_state=42)
model.fit(X_train, y_train)
# Predict
y_pred = model.predict(X_test)
# Evaluate
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)
print(f"Mean Squared Error: {mse}")
print(f"R^2 Score: {r2}")
# Plotting predictions
plt.figure(figsize=(10,6))
sns.scatterplot(x=y_test, y=y_pred)
plt.xlabel('Actual PM2.5')
plt.ylabel('Predicted PM2.5')
plt.title('Actual vs Predicted PM2.5 Levels')
plt.plot([y.min(), y.max()], [y.min(), y.max()], 'r--')  # line of perfect prediction
plt.show()
